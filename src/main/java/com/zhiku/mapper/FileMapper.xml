<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhiku.mapper.FileMapper">
  <resultMap id="BaseResultMap" type="com.zhiku.entity.File">
    <id column="fid" jdbcType="INTEGER" property="fid" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_course" jdbcType="INTEGER" property="fileCourse" />
    <result column="file_teacher" jdbcType="VARCHAR" property="fileTeacher" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="file_upper" jdbcType="INTEGER" property="fileUpper" />
    <result column="file_upload_time" jdbcType="TIMESTAMP" property="fileUploadTime" />
    <result column="file_download_count" jdbcType="INTEGER" property="fileDownloadCount" />
    <result column="file_desc" jdbcType="VARCHAR" property="fileDesc" />
    <result column="file_status" jdbcType="CHAR" property="fileStatus" />
    <result column="file_score" jdbcType="REAL" property="fileScore" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zhiku.entity.File">
    <result column="file_sha" jdbcType="LONGVARCHAR" property="fileSha" />
  </resultMap>
  <sql id="Base_Column_List">
    fid, file_path, file_name, file_course, file_teacher, file_type, file_upper, file_upload_time, 
    file_download_count, file_desc, file_status, file_score
  </sql>
  <sql id="Blob_Column_List">
    file_sha
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from file
    where fid = #{fid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from file
    where fid = #{fid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhiku.entity.File">
    insert into file (fid, file_path, file_name, 
      file_course, file_teacher, file_type, 
      file_upper, file_upload_time, file_download_count, 
      file_desc, file_status, file_score, 
      file_sha)
    values (#{fid,jdbcType=INTEGER}, #{filePath,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, 
      #{fileCourse,jdbcType=INTEGER}, #{fileTeacher,jdbcType=VARCHAR}, #{fileType,jdbcType=VARCHAR}, 
      #{fileUpper,jdbcType=INTEGER}, #{fileUploadTime,jdbcType=TIMESTAMP}, #{fileDownloadCount,jdbcType=INTEGER}, 
      #{fileDesc,jdbcType=VARCHAR}, #{fileStatus,jdbcType=CHAR}, #{fileScore,jdbcType=REAL}, 
      #{fileSha,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhiku.entity.File">
    insert into file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        fid,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileCourse != null">
        file_course,
      </if>
      <if test="fileTeacher != null">
        file_teacher,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="fileUpper != null">
        file_upper,
      </if>
      <if test="fileUploadTime != null">
        file_upload_time,
      </if>
      <if test="fileDownloadCount != null">
        file_download_count,
      </if>
      <if test="fileDesc != null">
        file_desc,
      </if>
      <if test="fileStatus != null">
        file_status,
      </if>
      <if test="fileScore != null">
        file_score,
      </if>
      <if test="fileSha != null">
        file_sha,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileCourse != null">
        #{fileCourse,jdbcType=INTEGER},
      </if>
      <if test="fileTeacher != null">
        #{fileTeacher,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileUpper != null">
        #{fileUpper,jdbcType=INTEGER},
      </if>
      <if test="fileUploadTime != null">
        #{fileUploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileDownloadCount != null">
        #{fileDownloadCount,jdbcType=INTEGER},
      </if>
      <if test="fileDesc != null">
        #{fileDesc,jdbcType=VARCHAR},
      </if>
      <if test="fileStatus != null">
        #{fileStatus,jdbcType=CHAR},
      </if>
      <if test="fileScore != null">
        #{fileScore,jdbcType=REAL},
      </if>
      <if test="fileSha != null">
        #{fileSha,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhiku.entity.File">
    update file
    <set>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileCourse != null">
        file_course = #{fileCourse,jdbcType=INTEGER},
      </if>
      <if test="fileTeacher != null">
        file_teacher = #{fileTeacher,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileUpper != null">
        file_upper = #{fileUpper,jdbcType=INTEGER},
      </if>
      <if test="fileUploadTime != null">
        file_upload_time = #{fileUploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileDownloadCount != null">
        file_download_count = #{fileDownloadCount,jdbcType=INTEGER},
      </if>
      <if test="fileDesc != null">
        file_desc = #{fileDesc,jdbcType=VARCHAR},
      </if>
      <if test="fileStatus != null">
        file_status = #{fileStatus,jdbcType=CHAR},
      </if>
      <if test="fileScore != null">
        file_score = #{fileScore,jdbcType=REAL},
      </if>
      <if test="fileSha != null">
        file_sha = #{fileSha,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where fid = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zhiku.entity.File">
    update file
    set file_path = #{filePath,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_course = #{fileCourse,jdbcType=INTEGER},
      file_teacher = #{fileTeacher,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=VARCHAR},
      file_upper = #{fileUpper,jdbcType=INTEGER},
      file_upload_time = #{fileUploadTime,jdbcType=TIMESTAMP},
      file_download_count = #{fileDownloadCount,jdbcType=INTEGER},
      file_desc = #{fileDesc,jdbcType=VARCHAR},
      file_status = #{fileStatus,jdbcType=CHAR},
      file_score = #{fileScore,jdbcType=REAL},
      file_sha = #{fileSha,jdbcType=LONGVARCHAR}
    where fid = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhiku.entity.File">
    update file
    set file_path = #{filePath,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_course = #{fileCourse,jdbcType=INTEGER},
      file_teacher = #{fileTeacher,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=VARCHAR},
      file_upper = #{fileUpper,jdbcType=INTEGER},
      file_upload_time = #{fileUploadTime,jdbcType=TIMESTAMP},
      file_download_count = #{fileDownloadCount,jdbcType=INTEGER},
      file_desc = #{fileDesc,jdbcType=VARCHAR},
      file_status = #{fileStatus,jdbcType=CHAR},
      file_score = #{fileScore,jdbcType=REAL}
    where fid = #{fid,jdbcType=INTEGER}
  </update>

  <!-- 自定义SQL -->
  <resultMap id="FileView" type="com.zhiku.view.FileView" extends="BaseResultMap">
    <result property="upperName" column="user_username" jdbcType="VARCHAR"></result>
    <association property="fileKeys" resultMap="com.zhiku.mapper.FileKeysMapper.BaseResultMap"></association>
  </resultMap>
  <sql id="FileView_Base_Column_List">
    file.fid, file_name, file_course, file_teacher, file_type, file_upper, file_upload_time,
    file_download_count, file_desc, file_status, file_score, user_username, file_keys.*
  </sql>
  <select id="selectBySha" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select *
    from file
    where file_sha = #{sha}
  </select>

  <select id="selectFiles" resultMap="FileView">
    select
    <include refid="FileView_Base_Column_List" />
    from file,file_keys,user
    <where>
      file.fid = file_keys.fid and
      user.uid = file.file_upper and
      <if test="keyWord != null">
        (file_name like concat('%',#{keyWord},'%') or
        user.user_username like concat('%',#{keyWord},'%') or
        file_keys.key1 like concat('%',#{keyWord},'%') or
        file_keys.key2 like concat('%',#{keyWord},'%') or
        file_keys.key3 like concat('%',#{keyWord},'%') or
        file_keys.key4 like concat('%',#{keyWord},'%') or
        file_keys.key5 like concat('%',#{keyWord},'%') or
        file_keys.key6 like concat('%',#{keyWord},'%') or
        file_keys.key7 like concat('%',#{keyWord},'%') or
        file_keys.key8 like concat('%',#{keyWord},'%') or
        file_keys.key9 like concat('%',#{keyWord},'%') or
        file_keys.key10 like concat('%',#{keyWord},'%'))
      </if>
      <if test="file.fileCourse != null">
        and file_course = #{file.fileCourse}
      </if>
      order by file_upload_time
      <if test="order == true">
        desc
      </if>
      limit #{startLine},#{pageSize}
    </where>
  </select>

  <select id="selectFileUploadRecords" resultMap="FileView">
    select
    <include refid="FileView_Base_Column_List"/>
    from file,file_keys,user
    <where>
      file.fid = file_keys.fid and
      user.uid = file.file_upper and
      user.uid = #{user.uid}
      order by file_upload_time
      limit #{startLine},#{pageSize}
    </where>
  </select>

</mapper>