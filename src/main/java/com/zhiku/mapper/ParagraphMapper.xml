<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhiku.mapper.ParagraphMapper">
  <resultMap id="BaseResultMap" type="com.zhiku.entity.Paragraph">
    <id column="pid" jdbcType="INTEGER" property="pid" />
    <result column="paragraph_seq" jdbcType="INTEGER" property="paragraphSeq" />
    <result column="paragraph_knowledge" jdbcType="INTEGER" property="paragraphKnowledge" />
    <result column="paragraph_type" jdbcType="CHAR" property="paragraphType" />
    <result column="paragraph_newline" jdbcType="CHAR" property="paragraphNewline" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zhiku.entity.Paragraph">
    <result column="paragraph_content" jdbcType="LONGVARCHAR" property="paragraphContent" />
  </resultMap>
  <sql id="Base_Column_List">
    pid, paragraph_seq, paragraph_knowledge, paragraph_type, paragraph_newline
  </sql>
  <sql id="Blob_Column_List">
    paragraph_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from paragraph
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from paragraph
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhiku.entity.Paragraph">
    insert into paragraph (pid, paragraph_seq, paragraph_knowledge, 
      paragraph_type, paragraph_newline, paragraph_content
      )
    values (#{pid,jdbcType=INTEGER}, #{paragraphSeq,jdbcType=INTEGER}, #{paragraphKnowledge,jdbcType=INTEGER}, 
      #{paragraphType,jdbcType=CHAR}, #{paragraphNewline,jdbcType=CHAR}, #{paragraphContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhiku.entity.Paragraph">
    insert into paragraph
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="paragraphSeq != null">
        paragraph_seq,
      </if>
      <if test="paragraphKnowledge != null">
        paragraph_knowledge,
      </if>
      <if test="paragraphType != null">
        paragraph_type,
      </if>
      <if test="paragraphNewline != null">
        paragraph_newline,
      </if>
      <if test="paragraphContent != null">
        paragraph_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="paragraphSeq != null">
        #{paragraphSeq,jdbcType=INTEGER},
      </if>
      <if test="paragraphKnowledge != null">
        #{paragraphKnowledge,jdbcType=INTEGER},
      </if>
      <if test="paragraphType != null">
        #{paragraphType,jdbcType=CHAR},
      </if>
      <if test="paragraphNewline != null">
        #{paragraphNewline,jdbcType=CHAR},
      </if>
      <if test="paragraphContent != null">
        #{paragraphContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhiku.entity.Paragraph">
    update paragraph
    <set>
      <if test="paragraphSeq != null">
        paragraph_seq = #{paragraphSeq,jdbcType=INTEGER},
      </if>
      <if test="paragraphKnowledge != null">
        paragraph_knowledge = #{paragraphKnowledge,jdbcType=INTEGER},
      </if>
      <if test="paragraphType != null">
        paragraph_type = #{paragraphType,jdbcType=CHAR},
      </if>
      <if test="paragraphNewline != null">
        paragraph_newline = #{paragraphNewline,jdbcType=CHAR},
      </if>
      <if test="paragraphContent != null">
        paragraph_content = #{paragraphContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zhiku.entity.Paragraph">
    update paragraph
    set paragraph_seq = #{paragraphSeq,jdbcType=INTEGER},
      paragraph_knowledge = #{paragraphKnowledge,jdbcType=INTEGER},
      paragraph_type = #{paragraphType,jdbcType=CHAR},
      paragraph_newline = #{paragraphNewline,jdbcType=CHAR},
      paragraph_content = #{paragraphContent,jdbcType=LONGVARCHAR}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhiku.entity.Paragraph">
    update paragraph
    set paragraph_seq = #{paragraphSeq,jdbcType=INTEGER},
      paragraph_knowledge = #{paragraphKnowledge,jdbcType=INTEGER},
      paragraph_type = #{paragraphType,jdbcType=CHAR},
      paragraph_newline = #{paragraphNewline,jdbcType=CHAR}
    where pid = #{pid,jdbcType=INTEGER}
  </update>

  <!--自定义SQL-->
  <select id="selectByParagraphSeq" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * from paragraph where paragraph_seq = #{paragraphSeq}
  </select>
</mapper>